make sure t/02.usage.t covers the entirety of the API as in the POD

"always return undef, not 0, for false" audit (for systems like mac os x 
where 0 is a valid PID)

see if there is a pureperl win32 possibility via Win32:
  http://perldoc.perl.org/Win32.html
... there must be some way to do a windows/pure perl implementation, but 
    kill() and then check errno isn't it ...
      (0,4,184,1164 are owned by system, 472, 1472 owned by same user):
pid: 0, out: 0, err: Invalid argument (22)
pid: 4, out: 0, err: Invalid argument (22)
pid: 184, out: 0, err: Invalid argument (22)
pid: 472, out: 1, err: Invalid argument (22)
pid: 1472, out: 1, err: Invalid argument (22)
pid: 1164, out: 0, err: Invalid argument (22)

efficiency:
- write a version of pexists that is *all* XS?
- win32: use a process snapshot when we ask about a lot of PIDs,
  heuristically choose at runtime which code to run based on #pids

for better test coverage of pureperl stuff via cpants, make a test 
script that (for information purposes only) runs pureperl tests
seperately? this would break win32/{strawberry|activeperl}, so we'd have 
to check $^O and skip in that case...

svnamdin dump + svnadmin load.  dump from the old, load into the new
to get this stuff into chronicle svn

Perl::Critic and Kwalitee info:
  http://www.slideshare.net/kcowgill/testing-code-and-assuring-quality/
  http://cpants.perl.org/kwalitee.html

